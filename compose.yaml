services:
  postgres:
    build:
      context: ./.docker/postgres
      dockerfile: Dockerfile
    container_name: rdata_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rdata
      VIRTUAL_HOST: .pg.rdatacore.docker
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      default:
        aliases:
          - pg.rdatacore.docker

  redis:
    image: redis:7-alpine
    container_name: rdata_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      default:
        aliases:
          - redis.rdatacore.docker
    environment:
      VIRTUAL_HOST: .redis.rdatacore.docker

  app:
    build:
      context: .
      dockerfile: ./.docker/app/Dockerfile_local
    container_name: rdata_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/rdata
      REDIS_URL: redis://redis:6379
      SERVER_HOST: 0.0.0.0
      API_PORT: 80
      RUST_LOG: debug
      VIRTUAL_HOST: .rdatacore.docker
      MAIN_SERVICE: app
      JWT_SECRET: development_secret_key
      JWT_EXPIRATION: 86400
    ports:
      - '80'
    restart: unless-stopped
    extra_hosts:
      - pg.rdatacore.docker:host-gateway
    networks:
      default:
        aliases:
          - rdatacore.docker

volumes:
  postgres_data:
  redis_data:

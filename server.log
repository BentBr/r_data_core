warning: unused import: `crate::api::response::ApiResponse`
 --> src/api/middleware/error_handlers.rs:7:5
  |
7 | use crate::api::response::ApiResponse;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `postgres::PgRow`
 --> src/api/public/entities/repository.rs:8:12
  |
8 | use sqlx::{postgres::PgRow, PgPool, Row};
  |            ^^^^^^^^^^^^^^^

warning: unused imports: `delete`, `post`, and `put`
 --> src/api/public/entities/routes.rs:1:17
  |
1 | use actix_web::{delete, get, post, put, web, HttpResponse, Responder};
  |                 ^^^^^^       ^^^^  ^^^

warning: unused imports: `EntityQuery` and `EntityTypeInfo`
 --> src/api/public/entities/routes.rs:5:21
  |
5 | use super::models::{EntityQuery, EntityTypeInfo};
  |                     ^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `crate::entity::DynamicEntity`
 --> src/api/public/entities/routes.rs:8:5
  |
8 | use crate::entity::DynamicEntity;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Serialize`
 --> src/api/public/queries/models.rs:1:26
  |
1 | use serde::{Deserialize, Serialize};
  |                          ^^^^^^^^^

warning: unused import: `serde_json::Value`
 --> src/api/public/queries/repository.rs:4:5
  |
4 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/api/public/queries/repository.rs:6:5
  |
6 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `actix_web::middleware as web_middleware`
 --> src/api/mod.rs:8:5
  |
8 | use actix_web::middleware as web_middleware;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `App`, `HttpResponse`, `ResponseError`, and `Result`
 --> src/api/mod.rs:9:22
  |
9 | use actix_web::{web, App, HttpResponse, Responder, ResponseError, Result};
  |                      ^^^  ^^^^^^^^^^^^             ^^^^^^^^^^^^^  ^^^^^^

warning: unused variable: `uuid`
   --> src/api/auth.rs:244:12
    |
244 |         Ok(uuid) => {
    |            ^^^^ help: if this is intentional, prefix it with an underscore: `_uuid`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `entity_type`
  --> src/api/public/queries/repository.rs:19:9
   |
19 |         entity_type: &str,
   |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_entity_type`

warning: unused variable: `query`
  --> src/api/public/queries/repository.rs:20:9
   |
20 |         query: &AdvancedEntityQuery,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: this function depends on never type fallback being `()`
  --> src/cache/redis.rs:18:5
   |
18 |     pub async fn new(redis_url: &str, default_ttl: u64) -> Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/never-type-fallback.html>
   = help: specify the types explicitly
note: in edition 2024, the requirement `!: FromRedisValue` will fail
  --> src/cache/redis.rs:29:14
   |
29 |             .query_async(&mut conn)
   |              ^^^^^^^^^^^
   = note: `#[warn(dependency_on_unit_never_type_fallback)]` on by default
help: use `()` annotations to avoid fallback changes
   |
29 |             .query_async::<_, ()>(&mut conn)
   |                         +++++++++

warning: unused variable: `uuid`
   --> src/db/repository.rs:299:45
    |
299 |     async fn create_version_snapshot(&self, uuid: &Uuid, _entity: &T) -> Result<()> {
    |                                             ^^^^ help: if this is intentional, prefix it with an underscore: `_uuid`

warning: unused variable: `class_def`
  --> src/entity/dynamic_entity/repository.rs:28:13
   |
28 |         let class_def = sqlx::query("SELECT * FROM class_definitions WHERE entity_type ...
   |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_class_def`

warning: unused variable: `class_def`
  --> src/entity/dynamic_entity/repository.rs:85:13
   |
85 |         let class_def = sqlx::query("SELECT * FROM class_definitions WHERE entity_type ...
   |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_class_def`

warning: this function depends on never type fallback being `()`
  --> src/cache/redis.rs:47:1
   |
47 | #[async_trait]
   | ^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/never-type-fallback.html>
   = help: specify the types explicitly
note: in edition 2024, the requirement `!: FromRedisValue` will fail
  --> src/cache/redis.rs:83:14
   |
83 |         conn.set_ex(key, serialized, ttl)
   |              ^^^^^^
help: use `()` annotations to avoid fallback changes
   |
83 |         conn.set_ex::<_, _, ()>(key, serialized, ttl)
   |                    ++++++++++++

warning: this function depends on never type fallback being `()`
  --> src/cache/redis.rs:47:1
   |
47 | #[async_trait]
   | ^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/never-type-fallback.html>
   = help: specify the types explicitly
note: in edition 2024, the requirement `!: FromRedisValue` will fail
  --> src/cache/redis.rs:93:14
   |
93 |         conn.del(key)
   |              ^^^
help: use `()` annotations to avoid fallback changes
   |
93 |         conn.del::<_, ()>(key)
   |                 +++++++++

warning: this function depends on never type fallback being `()`
   --> src/cache/redis.rs:47:1
    |
47  | #[async_trait]
    | ^^^^^^^^^^^^^^
    |
    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/never-type-fallback.html>
    = help: specify the types explicitly
note: in edition 2024, the requirement `!: FromRedisValue` will fail
   --> src/cache/redis.rs:104:14
    |
104 |             .query_async(&mut conn)
    |              ^^^^^^^^^^^
help: use `()` annotations to avoid fallback changes
    |
104 |             .query_async::<_, ()>(&mut conn)
    |                         +++++++++

warning: unused variable: `cfg`
 --> src/api/admin/permissions/routes.rs:4:24
  |
4 | pub fn register_routes(cfg: &mut web::ServiceConfig) {
  |                        ^^^ help: if this is intentional, prefix it with an underscore: `_cfg`

warning: unused variable: `cfg`
 --> src/api/admin/system/routes.rs:4:24
  |
4 | pub fn register_routes(cfg: &mut web::ServiceConfig) {
  |                        ^^^ help: if this is intentional, prefix it with an underscore: `_cfg`

warning: unused variable: `cfg`
 --> src/api/admin/workflows/routes.rs:4:24
  |
4 | pub fn register_routes(cfg: &mut web::ServiceConfig) {
  |                        ^^^ help: if this is intentional, prefix it with an underscore: `_cfg`

warning: unused variable: `role`
  --> src/repository/admin_user_repository.rs:71:9
   |
71 |         role: Option<&str>,
   |         ^^^^ help: if this is intentional, prefix it with an underscore: `_role`

warning: function `validate_email` is never used
  --> src/api/admin/auth.rs:45:4
   |
45 | fn validate_email(email: &str) -> Result<(), ValidationError> {
   |    ^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: field `db_pool` is never read
 --> src/api/public/queries/repository.rs:9:5
  |
8 | pub struct QueryRepository {
  |            --------------- field in this struct
9 |     db_pool: PgPool,
  |     ^^^^^^^

warning: multiple associated items are never used
   --> src/entity/notification.rs:123:12
    |
121 | impl Notification {
    | ----------------- associated items in this implementation
122 |     /// Create a new notification
123 |     pub fn new(notification_type: NotificationType, subject: String, body: String) -> ...
    |            ^^^
...
146 |     pub fn with_recipient_uuid(mut self, recipient_uuid: Uuid) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^
...
152 |     pub fn with_recipient_email(mut self, email: String) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^
...
158 |     pub fn with_priority(mut self, priority: NotificationPriority) -> Self {
    |            ^^^^^^^^^^^^^
...
164 |     pub fn schedule_for(mut self, time: DateTime<Utc>) -> Self {
    |            ^^^^^^^^^^^^
...
170 |     pub fn mark_as_sent(&mut self) {
    |            ^^^^^^^^^^^^
...
176 |     pub fn mark_as_read(&mut self) {
    |            ^^^^^^^^^^^^
...
182 |     pub fn mark_as_failed(&mut self, error: &str) {
    |            ^^^^^^^^^^^^^^
...
189 |     pub fn is_ready_to_send(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^
...
202 |     pub fn validate(&self) -> Result<()> {
    |            ^^^^^^^^

warning: struct `DynamicEntityRepository` is never constructed
  --> src/entity/dynamic_entity/repository.rs:14:12
   |
14 | pub struct DynamicEntityRepository {
   |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `create`, `update`, `get_by_type`, and `delete_by_type` are never used
   --> src/entity/dynamic_entity/repository.rs:21:12
    |
19  | impl DynamicEntityRepository {
    | ---------------------------- associated items in this implementation
20  |     /// Create a new repository instance
21  |     pub fn new(pool: PgPool) -> Self {
    |            ^^^
...
26  |     pub async fn create(&self, entity: &DynamicEntity) -> Result<()> {
    |                  ^^^^^^
...
83  |     pub async fn update(&self, entity: &DynamicEntity) -> Result<()> {
    |                  ^^^^^^
...
121 |     pub async fn get_by_type(&self, entity_type: &str) -> Result<Option<DynamicEntity>> {
    |                  ^^^^^^^^^^^
...
160 |     pub async fn delete_by_type(&self, entity_type: &str) -> Result<()> {
    |                  ^^^^^^^^^^^^^^

warning: struct `DynamicEntityValidator` is never constructed
  --> src/entity/dynamic_entity/validator.rs:11:12
   |
11 | pub struct DynamicEntityValidator;
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/entity/dynamic_entity/validator.rs:15:12
    |
13  | impl DynamicEntityValidator {
    | --------------------------- associated functions in this implementation
14  |     /// Validate a field against its definition
15  |     pub fn validate_field(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |            ^^^^^^^^^^^^^^
...
36  |     fn validate_string(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^
...
89  |     fn validate_integer(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^
...
146 |     fn validate_float(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^
...
199 |     fn validate_boolean(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^
...
227 |     fn validate_array(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^
...
238 |     fn validate_object(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^
...
249 |     fn validate_date(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^
...
314 |     fn validate_datetime(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^
...
385 |     fn validate_uuid(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^
...
404 |     fn validate_select(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^
...
435 |     fn validate_multi_select(field_def: &FieldDefinition, value: &Value) -> Result<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_field` is never used
   --> src/entity/dynamic_entity/validator.rs:479:8
    |
479 | pub fn validate_field(field_def: &Value, value: &Value, field_name: &str) -> Result<()> {
    |        ^^^^^^^^^^^^^^

warning: function `validate_entity` is never used
   --> src/entity/dynamic_entity/validator.rs:535:8
    |
535 | pub fn validate_entity(entity: &Value, class_def: &ClassDefinition) -> Result<()> {
    |        ^^^^^^^^^^^^^^^

warning: `r_data_core` (lib) generated 33 warnings (run `cargo fix --lib -p r_data_core` to apply 14 suggestions)
warning: unused import: `HttpResponse`
 --> src/main.rs:3:27
  |
3 | use actix_web::{web, App, HttpResponse, HttpServer};
  |                           ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `serde_json`
 --> src/main.rs:5:5
  |
5 | use serde_json;
  |     ^^^^^^^^^^

warning: unused imports: `DESCRIPTION`, `NAME`, and `VERSION`
  --> src/main.rs:10:19
   |
10 | use r_data_core::{DESCRIPTION, NAME, VERSION};
   |                   ^^^^^^^^^^^  ^^^^  ^^^^^^^

warning: unused import: `crate::api::response::ApiResponse`
 --> src/api/middleware/error_handlers.rs:7:5
  |
7 | use crate::api::response::ApiResponse;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ApiError` and `Status`
  --> src/api/mod.rs:13:32
   |
13 | pub use crate::api::response::{ApiError, ApiResponse, Status};
   |                                ^^^^^^^^               ^^^^^^

warning: unused import: `permission_scheme::PermissionScheme`
  --> src/entity/mod.rs:16:9
   |
16 | pub use permission_scheme::PermissionScheme;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `workflow::WorkflowEntity`
  --> src/entity/mod.rs:18:9
   |
18 | pub use workflow::WorkflowEntity;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `admin_user_repository::*`
 --> src/repository/mod.rs:3:9
  |
3 | pub use admin_user_repository::*;
  |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::api::middleware::ErrorHandlers`
  --> src/main.rs:28:5
   |
28 | use crate::api::middleware::ErrorHandlers;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `admin`, `auth`, `docs`, and `public`
  --> src/main.rs:29:18
   |
29 | use crate::api::{admin, auth, docs, public, ApiResponse, ApiState};
   |                  ^^^^^  ^^^^  ^^^^  ^^^^^^

warning: function `register_routes` is never used
   --> src/api/admin/auth.rs:419:8
    |
419 | pub fn register_routes(cfg: &mut web::ServiceConfig) {
    |        ^^^^^^^^^^^^^^^

warning: struct `AdminOnly` is never constructed
   --> src/api/auth.rs:308:12
    |
308 | pub struct AdminOnly(pub AuthUserClaims);
    |            ^^^^^^^^^

warning: fields `user_uuid` and `api_key_uuid` are never read
  --> src/api/middleware/api_auth.rs:15:9
   |
14 | pub struct ApiKeyClaims {
   |            ------------ fields in this struct
15 |     pub user_uuid: i64,
   |         ^^^^^^^^^
16 |     pub api_key_uuid: i64,
   |         ^^^^^^^^^^^^
   |
   = note: `ApiKeyClaims` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `ErrorResponse` is never constructed
  --> src/api/middleware/error_handlers.rs:10:8
   |
10 | struct ErrorResponse {
   |        ^^^^^^^^^^^^^

warning: struct `ErrorHandlers` is never constructed
  --> src/api/middleware/error_handlers.rs:15:12
   |
15 | pub struct ErrorHandlers;
   |            ^^^^^^^^^^^^^

warning: associated functions `new` and `handle_error` are never used
  --> src/api/middleware/error_handlers.rs:18:12
   |
17 | impl ErrorHandlers {
   | ------------------ associated functions in this implementation
18 |     pub fn new() -> Self {
   |            ^^^
...
22 |     pub fn handle_error<B>(res: ServiceResponse<B>) -> Result<ErrorHandlerResponse<B>>
   |            ^^^^^^^^^^^^

warning: fields `filter`, `limit`, `offset`, `sort_by`, and `sort_direction` are never read
  --> src/api/public/entities/models.rs:20:9
   |
19 | pub struct EntityQuery {
   |            ----------- fields in this struct
20 |     pub filter: Option<HashMap<String, Value>>,
   |         ^^^^^^
21 |     pub limit: Option<i64>,
   |         ^^^^^
22 |     pub offset: Option<i64>,
   |         ^^^^^^
23 |     pub sort_by: Option<String>,
   |         ^^^^^^^
24 |     pub sort_direction: Option<String>,
   |         ^^^^^^^^^^^^^^
   |
   = note: `EntityQuery` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: function `convert_value` is never used
  --> src/api/public/entities/models.rs:28:8
   |
28 | pub fn convert_value(value: &serde_json::Value) -> serde_json::Value {
   |        ^^^^^^^^^^^^^

warning: multiple fields are never read
  --> src/api/public/queries/models.rs:9:9
   |
8  | pub struct AdvancedEntityQuery {
   |            ------------------- fields in this struct
9  |     pub filter: Option<HashMap<String, Value>>,
   |         ^^^^^^
10 |     pub limit: Option<i64>,
   |         ^^^^^
11 |     pub offset: Option<i64>,
   |         ^^^^^^
12 |     pub sort_by: Option<String>,
   |         ^^^^^^^
13 |     pub sort_direction: Option<String>,
   |         ^^^^^^^^^^^^^^
14 |     pub include_related: Option<bool>,
   |         ^^^^^^^^^^^^^^^
15 |     pub fields: Option<Vec<String>>,
   |         ^^^^^^
   |
   = note: `AdvancedEntityQuery` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated functions `success_with_message`, `error`, `ok_with_message`, and `created` are never used
  --> src/api/response.rs:33:12
   |
21 | / impl<T> ApiResponse<T>
22 | | where
23 | |     T: Serialize,
   | |_________________- associated functions in this implementation
...
33 |       pub fn success_with_message(data: T, message: &str) -> Self {
   |              ^^^^^^^^^^^^^^^^^^^^
...
41 |       pub fn error(message: &str) -> ApiResponse<()> {
   |              ^^^^^
...
59 |       pub fn ok_with_message(data: T, message: &str) -> HttpResponse {
   |              ^^^^^^^^^^^^^^^
...
64 |       pub fn created(data: T, message: &str) -> HttpResponse {
   |              ^^^^^^^

warning: variants `NotFound`, `InternalError`, `BadRequest`, `Unauthorized`, `Forbidden`, and `UnprocessableEntity` are never constructed
   --> src/api/response.rs:148:5
    |
147 | pub enum ApiError {
    |          -------- variants in this enum
148 |     NotFound(String),
    |     ^^^^^^^^
149 |     InternalError(String),
    |     ^^^^^^^^^^^^^
150 |     BadRequest(String),
    |     ^^^^^^^^^^
151 |     Unauthorized(String),
    |     ^^^^^^^^^^^^
152 |     Forbidden(String),
    |     ^^^^^^^^^
153 |     UnprocessableEntity(String),
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `ApiError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: methods `set`, `delete`, and `clear` are never used
  --> src/cache/mod.rs:22:14
   |
17 | pub trait CacheBackend: Send + Sync {
   |           ------------ methods in this trait
...
22 |     async fn set<T: Serialize + Send + Sync>(
   |              ^^^
...
30 |     async fn delete(&self, key: &str) -> Result<()>;
   |              ^^^^^^
...
33 |     async fn clear(&self) -> Result<()>;
   |              ^^^^^

warning: methods `set`, `delete`, and `clear` are never used
   --> src/cache/mod.rs:91:18
    |
43  | impl CacheManager {
    | ----------------- methods in this implementation
...
91  |     pub async fn set<T: Serialize + Send + Sync>(
    |                  ^^^
...
116 |     pub async fn delete(&self, key: &str) -> Result<()> {
    |                  ^^^^^^
...
134 |     pub async fn clear(&self) -> Result<()> {
    |                  ^^^^^

warning: struct `Database` is never constructed
  --> src/db/mod.rs:11:12
   |
11 | pub struct Database {
   |            ^^^^^^^^

warning: associated items `new`, `check_connection`, `repository`, and `begin_transaction` are never used
  --> src/db/mod.rs:18:18
   |
16 | impl Database {
   | ------------- associated items in this implementation
17 |     /// Create a new database connection pool
18 |     pub async fn new(config: &DatabaseConfig) -> Result<Self> {
   |                  ^^^
...
30 |     pub async fn check_connection(&self) -> Result<()> {
   |                  ^^^^^^^^^^^^^^^^
...
40 |     pub fn repository<T>(&self, table_name: &str) -> repository::EntityRepository<T>
   |            ^^^^^^^^^^
...
54 |     pub async fn begin_transaction(&self) -> Result<sqlx::Transaction<'_, sqlx::Postgre...
   |                  ^^^^^^^^^^^^^^^^^

warning: method `repository` is never used
  --> src/db/repository.rs:12:8
   |
10 | pub trait PgPoolExtension {
   |           --------------- method in this trait
11 |     /// Get a repository for a specific entity type
12 |     fn repository<T>(&self) -> EntityRepository<T>
   |        ^^^^^^^^^^

warning: methods `get_pool`, `count`, `get_version`, and `list_versions` are never used
   --> src/db/repository.rs:90:12
    |
70  | / impl<T> EntityRepository<T>
71  | | where
72  | |     T: Send
73  | |         + Sync
...   |
77  | |         + DeserializeOwned
78  | |         + 'static,
    | |__________________- methods in this implementation
...
90  |       pub fn get_pool(&self) -> &PgPool {
    |              ^^^^^^^^
...
142 |       pub async fn count(&self, filter: Option<&str>) -> Result<i64> {
    |                    ^^^^^
...
305 |       pub async fn get_version(&self, uuid: &Uuid, version: i32) -> Result<VersionedDa...
    |                    ^^^^^^^^^^^
...
317 |       pub async fn list_versions(&self, uuid: &Uuid) -> Result<Vec<VersionedData>> {
    |                    ^^^^^^^^^^^^^

warning: methods `get_field`, `set_field`, `get_all_fields`, and `validate` are never used
  --> src/entity/mod.rs:30:8
   |
29 | pub trait DynamicFields {
   |           ------------- methods in this trait
30 |     fn get_field(&self, name: &str) -> Option<serde_json::Value>;
   |        ^^^^^^^^^
31 |     fn set_field(&mut self, name: &str, value: serde_json::Value) -> Result<()>;
   |        ^^^^^^^^^
32 |     fn get_all_fields(&self) -> HashMap<String, serde_json::Value>;
   |        ^^^^^^^^^^^^^^
33 |     fn validate(&self, class_def: &ClassDefinition) -> Result<()>;
   |        ^^^^^^^^

warning: methods `full_path`, `increment_version`, and `create_version_snapshot` are never used
   --> src/entity/abstract_entity.rs:86:12
    |
66  | impl AbstractRDataEntity {
    | ------------------------ methods in this implementation
...
86  |     pub fn full_path(&self) -> String {
    |            ^^^^^^^^^
...
95  |     pub fn increment_version(&mut self) {
    |            ^^^^^^^^^^^^^^^^^
...
101 |     pub fn create_version_snapshot(&self) -> VersionedData {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `has_permission`, `record_login_success`, `record_login_failure`, and `full_name` are never used
   --> src/entity/admin_user.rs:300:12
    |
189 | impl AdminUser {
    | -------------- methods in this implementation
...
300 |     pub fn has_permission(&self, _permission: &str) -> bool {
    |            ^^^^^^^^^^^^^^
...
312 |     pub fn record_login_success(&mut self) {
    |            ^^^^^^^^^^^^^^^^^^^^
...
318 |     pub fn record_login_failure(&mut self) {
    |            ^^^^^^^^^^^^^^^^^^^^
...
332 |     pub fn full_name(&self) -> String {
    |            ^^^^^^^^^

warning: methods `is_valid` and `update_last_used` are never used
   --> src/entity/admin_user.rs:376:12
    |
342 | impl ApiKey {
    | ----------- methods in this implementation
...
376 |     pub fn is_valid(&self) -> bool {
    |            ^^^^^^^^
...
391 |     pub async fn update_last_used(&mut self, pool: &sqlx::PgPool) -> Result<()> {
    |                  ^^^^^^^^^^^^^^^^

warning: associated items `new`, `add_permission`, `remove_permission`, `has_permission`, `get_role_permissions`, and `create_admin_scheme` are never used
   --> src/entity/permission_scheme.rs:95:12
    |
93  | impl PermissionScheme {
    | --------------------- associated items in this implementation
94  |     /// Create a new permission scheme
95  |     pub fn new(name: String) -> Self {
    |            ^^^
...
106 |     pub fn add_permission(&mut self, role: &str, permission: Permission) -> Result<()> {
    |            ^^^^^^^^^^^^^^
...
130 |     pub fn remove_permission(
    |            ^^^^^^^^^^^^^^^^^
...
167 |     pub fn has_permission(
    |            ^^^^^^^^^^^^^^
...
183 |     pub fn get_role_permissions(&self, role: &str) -> Option<&Vec<Permission>> {
    |            ^^^^^^^^^^^^^^^^^^^^
...
188 |     pub fn create_admin_scheme() -> Self {
    |            ^^^^^^^^^^^^^^^^^^^

warning: associated items `new` and `deserialize` are never used
  --> src/entity/version.rs:24:12
   |
22 | impl VersionedData {
   | ------------------ associated items in this implementation
23 |     /// Create a new versioned data snapshot
24 |     pub fn new(entity_uuid: Uuid, version_number: i32, data: serde_json::Value) -> Self {
   |            ^^^
...
34 |     pub fn deserialize<T>(&self) -> Result<T, serde_json::Error>
   |            ^^^^^^^^^^^

warning: associated items `new`, `add_step`, `get_step`, `remove_step`, and `validate` are never used
   --> src/entity/workflow.rs:204:12
    |
202 | impl WorkflowEntity {
    | ------------------- associated items in this implementation
203 |     /// Create a new workflow
204 |     pub fn new(name: String, trigger: TriggerType) -> Self {
    |            ^^^
...
220 |     pub fn add_step(&mut self, step: WorkflowStep) -> Result<()> {
    |            ^^^^^^^^
...
244 |     pub fn get_step(&self, uuid: Uuid) -> Option<&WorkflowStep> {
    |            ^^^^^^^^
...
249 |     pub fn remove_step(&mut self, uuid: Uuid) -> Result<()> {
    |            ^^^^^^^^^^^
...
275 |     pub fn validate(&self) -> Result<()> {
    |            ^^^^^^^^

warning: methods `get_field`, `get_fields`, `add_field`, `update_field`, `remove_field`, and `validate` are never used
   --> src/entity/class/definition.rs:134:12
    |
87  | impl ClassDefinition {
    | -------------------- methods in this implementation
...
134 |     pub fn get_field(&self, name: &str) -> Option<&FieldDefinition> {
    |            ^^^^^^^^^
...
139 |     pub fn get_fields(&self) -> &Vec<FieldDefinition> {
    |            ^^^^^^^^^^
...
144 |     pub fn add_field(&mut self, field_definition: FieldDefinition) -> Result<()> {
    |            ^^^^^^^^^
...
153 |     pub fn update_field(&mut self, field_definition: FieldDefinition) -> Result<()> {
    |            ^^^^^^^^^^^^
...
169 |     pub fn remove_field(&mut self, name: &str) -> Result<()> {
    |            ^^^^^^^^^^^^
...
182 |     pub fn validate(&self) -> Result<()> {
    |            ^^^^^^^^

warning: methods `generate_sql_schema` and `apply_to_database` are never used
   --> src/entity/class/schema.rs:114:12
    |
112 | impl ClassDefinition {
    | -------------------- methods in this implementation
113 |     /// Generate SQL table schema for this class
114 |     pub fn generate_sql_schema(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^^^
...
141 |     pub async fn apply_to_database(&self, pool: &PgPool) -> Result<()> {
    |                  ^^^^^^^^^^^^^^^^^

warning: associated function `from_value` is never used
  --> src/entity/dynamic_entity/entity.rs:16:8
   |
15 | pub trait FromValue: Sized {
   |           --------- associated function in this trait
16 |     fn from_value(value: &JsonValue) -> Result<Self>;
   |        ^^^^^^^^^^

warning: method `to_value` is never used
  --> src/entity/dynamic_entity/entity.rs:20:8
   |
19 | pub trait ToValue {
   |           ------- method in this trait
20 |     fn to_value(&self) -> Result<JsonValue>;
   |        ^^^^^^^^

warning: field `definition` is never read
   --> src/entity/dynamic_entity/entity.rs:125:9
    |
116 | pub struct DynamicEntity {
    |            ------------- field in this struct
...
125 |     pub definition: Arc<ClassDefinition>,
    |         ^^^^^^^^^^
    |
    = note: `DynamicEntity` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated items are never used
   --> src/entity/dynamic_entity/entity.rs:130:12
    |
128 | impl DynamicEntity {
    | ------------------ associated items in this implementation
129 |     /// Create a new dynamic entity
130 |     pub fn new(entity_type: String, definition: Arc<ClassDefinition>) -> Self {
    |            ^^^
...
176 |     pub fn get<T: FromValue>(&self, field: &str) -> Result<T> {
    |            ^^^
...
185 |     pub fn set<T: ToValue>(&mut self, field: &str, value: T) -> Result<()> {
    |            ^^^
...
222 |     pub fn validate(&self) -> Result<()> {
    |            ^^^^^^^^
...
244 |     pub fn increment_version(&mut self) -> Result<()> {
    |            ^^^^^^^^^^^^^^^^^
...
257 |     pub fn get_field_definition(&self, field: &str) -> Option<&FieldDefinition> {
    |            ^^^^^^^^^^^^^^^^^^^^
...
262 |     pub fn get_field_names(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^^^^

warning: associated items `new`, `get_sql_type`, and `validate` are never used
   --> src/entity/field/definition.rs:51:12
    |
49  | impl FieldDefinition {
    | -------------------- associated items in this implementation
50  |     /// Create a new field definition with default values
51  |     pub fn new(name: String, display_name: String, field_type: FieldType) -> Self {
    |            ^^^
...
186 |     pub fn get_sql_type(&self) -> String {
    |            ^^^^^^^^^^^^
...
195 |     pub fn validate(&self) -> Result<()> {
    |            ^^^^^^^^

warning: function `get_sql_type_for_field` is never used
  --> src/entity/field/types.rs:41:8
   |
41 | pub fn get_sql_type_for_field(
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: trait `NotificationManager` is never used
  --> src/notification/mod.rs:92:11
   |
92 | pub trait NotificationManager {
   |           ^^^^^^^^^^^^^^^^^^^

warning: trait `VersionManager` is never used
  --> src/versioning/mod.rs:27:11
   |
27 | pub trait VersionManager {
   |           ^^^^^^^^^^^^^^

warning: trait `WorkflowManager` is never used
   --> src/workflow/mod.rs:100:11
    |
100 | pub trait WorkflowManager {
    |           ^^^^^^^^^^^^^^^

warning: `r_data_core` (bin "r_data_core") generated 77 warnings (32 duplicates) (run `cargo fix --bin "r_data_core"` to apply 10 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.44s
     Running `target/debug/r_data_core`
[2025-04-16T21:28:08Z INFO  r_data_core] Starting R Data Core server...
[2025-04-16T21:28:08Z INFO  r_data_core] Environment: development
[2025-04-16T21:28:08Z INFO  r_data_core] Using SQLx migrations (run with 'cargo sqlx migrate run')
[2025-04-16T21:28:08Z ERROR r_data_core] Failed to initialize Redis cache: Cache error: Failed to get Redis connection: failed to lookup address information: nodename nor servname provided, or not known, falling back to in-memory only
[2025-04-16T21:28:08Z INFO  r_data_core] Starting HTTP server at http://0.0.0.0:8888
[2025-04-16T21:28:08Z INFO  actix_server::builder] starting 10 workers
[2025-04-16T21:28:08Z INFO  actix_server::server] Actix runtime found; starting in Actix runtime
[2025-04-16T21:28:08Z INFO  actix_server::server] starting service: "actix-web-service-0.0.0.0:8888", workers: 10, listening on: 0.0.0.0:8888
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering auth routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering admin routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering public routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registering documentation routes
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Admin Swagger UI at /admin/api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api::docs] Registered Public Swagger UI at /api/docs/
[2025-04-16T21:28:08Z DEBUG r_data_core::api] All routes registered
[2025-04-16T21:28:11Z DEBUG r_data_core::api::admin::auth] Request headers:
    host: localhost:8888
    user-agent: curl/8.7.1
    content-type: application/json
    content-length: 122
    accept: */*
    
[2025-04-16T21:28:11Z DEBUG r_data_core::api::admin::auth] Auth header present: None
[2025-04-16T21:28:11Z DEBUG r_data_core::api::admin::auth] Auth header present: false
[2025-04-16T21:28:11Z DEBUG r_data_core::api::admin::auth] Extensions has auth: false
[2025-04-16T21:28:11Z DEBUG r_data_core::api::admin::auth] No auth claims found, using nil UUID
[2025-04-16T21:28:11Z DEBUG r_data_core::api::admin::auth] Registration - Auth status: false, User: 00000000-0000-0000-0000-000000000000
[2025-04-16T21:28:11Z DEBUG sqlx::query] summary="SELECT * FROM admin_users …" db.statement="\n\nSELECT * FROM admin_users WHERE username = $1 OR email = $1\n" rows_affected=1 rows_returned=1 elapsed=5.556375ms elapsed_secs=0.005556375
[2025-04-16T21:28:11Z INFO  actix_web::middleware::logger] 127.0.0.1 curl/8.7.1 POST /admin/api/v1/auth/register HTTP/1.1 201 7.919000
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Request headers:
    accept: */*
    host: localhost:8888
    content-type: application/json
    content-length: 122
    authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMTk2NDAwYS0zM2E4LTcwYTUtZTIzMi0xMWMzNDcyNjA0ZDciLCJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwiaXNfYWRtaW4iOnRydWUsInJvbGUiOiJBZG1pbiIsImV4cCI6MTc0NzQzMDY3NiwiaWF0IjoxNzQ0ODM4Njc2fQ.fRTdk87P4XLFkrhFRpFRJP7JoMZTETzExnSB1EgU42w
    user-agent: curl/8.7.1
    
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Auth header present: Some("Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMTk2NDAwYS0zM2E4LTcwYTUtZTIzMi0xMWMzNDcyNjA0ZDciLCJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwiaXNfYWRtaW4iOnRydWUsInJvbGUiOiJBZG1pbiIsImV4cCI6MTc0NzQzMDY3NiwiaWF0IjoxNzQ0ODM4Njc2fQ.fRTdk87P4XLFkrhFRpFRJP7JoMZTETzExnSB1EgU42w")
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Auth header value: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMTk2NDAwYS0zM2E4LTcwYTUtZTIzMi0xMWMzNDcyNjA0ZDciLCJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwiaXNfYWRtaW4iOnRydWUsInJvbGUiOiJBZG1pbiIsImV4cCI6MTc0NzQzMDY3NiwiaWF0IjoxNzQ0ODM4Njc2fQ.fRTdk87P4XLFkrhFRpFRJP7JoMZTETzExnSB1EgU42w
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Auth header present: true
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Extensions has auth: false
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Extracted token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIwMTk2NDAwYS0zM2E4LTcwYTUtZTIzMi0xMWMzNDcyNjA0ZDciLCJuYW1lIjoiYWRtaW4iLCJlbWFpbCI6ImFkbWluQGV4YW1wbGUuY29tIiwiaXNfYWRtaW4iOnRydWUsInJvbGUiOiJBZG1pbiIsImV4cCI6MTc0NzQzMDY3NiwiaWF0IjoxNzQ0ODM4Njc2fQ.fRTdk87P4XLFkrhFRpFRJP7JoMZTETzExnSB1EgU42w
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Got JWT secret from app state
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] JWT verification successful: AuthUserClaims { sub: "0196400a-33a8-70a5-e232-11c3472604d7", name: "admin", email: "admin@example.com", is_admin: true, role: "Admin", exp: 1747430676, iat: 1744838676 }
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Manually extracted UUID from token: 0196400a-33a8-70a5-e232-11c3472604d7
[2025-04-16T21:28:33Z DEBUG r_data_core::api::admin::auth] Registration - Auth status: true, User: 0196400a-33a8-70a5-e232-11c3472604d7
[2025-04-16T21:28:33Z DEBUG sqlx::query] summary="SELECT * FROM admin_users …" db.statement="\n\nSELECT * FROM admin_users WHERE username = $1 OR email = $1\n" rows_affected=0 rows_returned=0 elapsed=545.625µs elapsed_secs=0.000545625
[2025-04-16T21:28:33Z DEBUG sqlx::query] summary="INSERT INTO admin_users ( …" db.statement="\n\nINSERT INTO admin_users (\n                uuid, path, username, email, password_hash, first_name, last_name,\n                is_active, created_at, updated_at, published, version, \n                created_by\n            ) VALUES (\n                $1, $2, $3, $4, $5, $6, $7, \n                $8, NOW(), NOW(), $9, 1, \n                $10\n            ) RETURNING uuid\n" rows_affected=1 rows_returned=1 elapsed=7.8765ms elapsed_secs=0.0078765
[2025-04-16T21:28:33Z INFO  actix_web::middleware::logger] 127.0.0.1 curl/8.7.1 POST /admin/api/v1/auth/register HTTP/1.1 200 338.404000
